bind_rows()
enriched_gs %>%
lapply(.,nrow)
enriched_gs %>%
lapply(.,nrow) %>%
unlist()
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .)
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5)
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw()
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=0.5))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.1, hjust=0.5))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.5))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.3))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count), position=position_dodge(width=0.9), size=4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count), position=position_dodge(width=1), size=4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25, size=4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25, size=3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count), position=position_dodge(width=0.9),
vjust=-0.25, size=3, color = geneset) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color = geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("KIDNEY", x$Description)] %>% length())
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("KIDNEY", x$Description)] %>% length()) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none") +
xlab("Genesets")
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none") +
xlab("Significantly enriched genesets")
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("KIDNEY", x$Description)] %>% length()) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none") +
xlab("Kidney-related enriched genesets")
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("DIAB", x$Description)] %>% length()) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none") +
xlab("Diabetic-related enriched genesets")
knitr::opts_chunk$set(echo = TRUE)
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("KIDNEY", x$Description)])
m_t2g <- msigdbr(species = "Homo sapiens", category = c("C5")) %>%
dplyr::select(gs_name, entrez_gene) %>%
rbind(msigdbr(species = "Homo sapiens", category = c("H")) %>%
dplyr::select(gs_name, entrez_gene))
em_limma_only_up <- enricher(eg$ENTREZID, TERM2GENE=m_t2g)
eg2 <- bitr(upG_t_only, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
em_t_only_up <- enricher(eg2$ENTREZID, TERM2GENE=m_t2g)
downG_limma_only <- downG_limma[downG_limma %ni% downG_t]
downG_t_only <- downG_t[downG_t %ni% downG_limma]
eg3 <- bitr(downG_limma_only, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
eg4 <- bitr(downG_t_only, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
em_limma_only_down <- enricher(eg3$ENTREZID, TERM2GENE=m_t2g)
em_t_only_down <- enricher(eg4$ENTREZID, TERM2GENE=m_t2g)
upG_both <- upG_limma[upG_limma %in% upG_t]
downG_both <- downG_limma[downG_limma %in% downG_t]
eg5 <- bitr(upG_both, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
eg6 <- bitr(downG_both, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
em_up_both <- enricher(eg5$ENTREZID, TERM2GENE=m_t2g)
em_down_both <- enricher(eg6$ENTREZID, TERM2GENE=m_t2g)
enriched_gs <- list(em_limma_only_up, em_t_only_up, em_limma_only_down, em_t_only_down,
em_up_both, em_down_both) %>%
lapply(., function(x) x@result %>% filter(p.adjust < 0.05))
enriched_gs %>%
lapply(.,nrow) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none") +
xlab("Significantly enriched genesets")
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("KIDNEY", x$Description)])
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("KIDNEY", x$Description)] %>% length()) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none") +
xlab("Kidney-related enriched genesets")
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("DIAB", x$Description)] %>% length()) %>%
unlist() %>%
data.frame(geneset = c("Limma only Up", "T-test only Up",
"Limma only Down", "T-test only Down",
"Both Up", "Both Down"),
count = .) %>%
ggplot(aes(geneset, count, fill = geneset)) +
geom_bar(stat = "identity", width = .4, color = "black") +
geom_text(aes(label=count, color=geneset), position=position_dodge(width=0.9),
vjust=-0.25, size=3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.7, hjust=0.6),
legend.position = "none") +
xlab("Diabetic-related enriched genesets")
enriched_gs %>%
lapply(.,function(x) x$Description[grepl("KIDNEY", x$Description)])
library(standR)
remotes::install_github("DavisLaboratory/GeoMXAnalysisWorkflow", build_vignettes = FALSE)
#set knitr chunk options
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#load packages to avoid startup messages later in the code
# devtools::install_github("DavisLaboratory/standR")
library(standR)
library(tidyverse)
countFile <- read_tsv("../inst/extdata//count.txt") %>% as.data.frame()
View(countFile)
sampleAnnoFile <- read_tsv("../inst/extdata/metadata.txt") %>% as.data.frame()
View(sampleAnnoFile)
devtools::install_github("DavisLaboratory/standR")
featureAnnoFile <- read_tsv("../inst/extdata/genemeta.txt") %>% as.data.frame()
View(sampleAnnoFile)
View(featureAnnoFile)
View(countFile)
typeof(countFile)
class(countFile)
head(countFile)[,1:5]
head(sampleAnnoFile)[,1:5]
head(featureAnnoFile)[,1:5]
library(standR)
spe <- readGeoMx(countFile, sampleAnnoFile, featureAnnoFile)
spe
library(SpatialExperiment)
assayNames(spe)
assay(spe, "counts")[1:5,1:5]
assay(spe, "logcounts")[1:5,1:5]
library(tidyverse)
data_path <- "~/Desktop/SampleData/Raw/GeoMx/Dangaj/"
genemeta_countmat <- read_excel(paste0(data_path, "Raw Dataset.xlsx"), sheet = 2) %>% as.data.frame()
library(readxl)
genemeta_countmat <- read_excel(paste0(data_path, "Raw Dataset.xlsx"), sheet = 2) %>% as.data.frame()
colnames(genemeta_countmat)
countFile <- genemeta_countmat %>%
select("ProbeName",       "ProbeDisplayName", "TargetName",
"HUGOSymbol",      "Accessions",       "GenomeBuild",
"GenomicPosition", "AnalyteType",      "CodeClass",
"ProbePool",       "TargetGroup")
featureAnnoFile <- genemeta_countmat %>%
select(-c("ProbeName",       "ProbeDisplayName", "TargetName",
"HUGOSymbol",      "Accessions",       "GenomeBuild",
"GenomicPosition", "AnalyteType",      "CodeClass",
"ProbePool",       "TargetGroup"))
View(featureAnnoFile)
countFile <- read_tsv("../inst/extdata//count.txt") %>% as.data.frame()
sampleAnnoFile <- read_tsv("../inst/extdata/metadata.txt") %>% as.data.frame()
featureAnnoFile <- read_tsv("../inst/extdata/genemeta.txt") %>% as.data.frame()
View(featureAnnoFile)
colnames(View(featureAnnoFile))
colnames(featureAnnoFile)
colData(spe)$QCFlags
spe <- readGeoMx("../inst/extdata/count.txt",
"../inst/extdata/metadata.txt",
"../inst/extdata/genemeta.txt")
spe
library(SpatialExperiment)
assayNames(spe)
assay(spe, "logcounts")[1:5,1:5]
colData(spe)[1:5,1:5]
rowData(spe)[1:5,1:5]
metadata(spe)$NegProbes[,1:5]
dge <- edgeR::SE2DGEList(spe)
spe2 <- readGeoMxFromDGE(dge)
spe2
colData(spe)$QCFlags
library(ggplot2)
library(ggalluvial)
plotSampleInfo(spe, column2plot = c("SlideName","Type"))
colnames(featureAnnoFile)
colnames(sampleAnnoFile)
countFile
table(featureAnnoFile$AnalyteType)
table(featureAnnoFile$TargetGroup)
table(featureAnnoFile$CodeClass)
table(featureAnnoFile$ProbePool)
table(featureAnnoFile$NumberOfProbesIncluded)
table(featureAnnoFile$NumberOfProbesTotal)
typeof(featureAnnoFile$NumberOfProbesTotal)
featureAnnoFile$NumberOfProbesTotal[1]
featureAnnoFile$TargetName(featureAnnoFile$NumberOfProbesTotal == 139)
featureAnnoFile$TargetName[featureAnnoFile$NumberOfProbesTotal == 139]
table(featureAnnoFile$AnalyteType)
spe <- addPerROIQC(spe, rm_genes = TRUE)
dim(spe)
metadata(spe) |> names()
plotGeneQC(spe, ordannots = "regions", col = regions, point_size = 2)
data("dkd_spe_subset")
dkd_spe_subset <- addPerROIQC(dkd_spe_subset)
class(dkd_spe_subset)
dkd_spe_subset <- addPerROIQC(dkd_spe_subset)
plotROIQC(spe, x_threshold = 150, color = SlideName)
qc <- colData(spe)$AOINucleiCount > 150
table(qc)
spe <- spe[, qc]
plotROIQC(spe,  x_axis = "AOISurfaceArea", x_lab = "AreaSize", y_axis = "lib_size", y_lab = "Library size", col = SlideName)
plotRLExpr(spe)
plotRLExpr(spe, ordannots = "SlideName", assay = 2, color = SlideName)
plotRLExpr(spe, ordannots = "Type", assay = 2, color = Type)
drawPCA(spe, assay = 2, color = Type)
set.seed(100)
spe <- scater::runPCA(spe)
pca_results <- reducedDim(spe, "PCA")
colData(spe)$Type
set.seed(100)
spe <- scater::runPCA(spe)
pca_results <- reducedDim(spe, "PCA")
drawPCA(spe, precomputed = pca_results, col = Type)
